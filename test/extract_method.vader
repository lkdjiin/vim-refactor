Given (a simple method):
  def greet
    greeting = "Hello world"
    puts greeting
  end

Do():
  :2\<Enter>
  :ExtractMethod\<Enter>

Expect():
  def greet
    puts greeting
  end

  def greeting
    "Hello world"
  end

Given (a method followed by another one):
  def greet
    greeting = "Hello world"
    puts greeting
  end

  def foo
    'bar'
  end

Do():
  :2\<Enter>
  :ExtractMethod\<Enter>

Expect():
  def greet
    puts greeting
  end

  def greeting
    "Hello world"
  end

  def foo
    'bar'
  end

Given (a method indented in a class):
  class HelloWorld
    def greet
      greeting = "Hello world"
      puts greeting
    end

    def foo
      'bar'
    end
  end

Do():
  :3\<Enter>
  :ExtractMethod\<Enter>

Expect():
  class HelloWorld
    def greet
      puts greeting
    end

    def greeting
      "Hello world"
    end

    def foo
      'bar'
    end
  end


Given (a method indented in a clas in a module):
  module Greeter
    class HelloWorld
      def greet
        greeting = "Hello world"
        puts greeting
      end

      def foo
        'bar'
      end
    end
  end

Do():
  :4\<Enter>
  :ExtractMethod\<Enter>

Expect():
  module Greeter
    class HelloWorld
      def greet
        puts greeting
      end

      def greeting
        "Hello world"
      end

      def foo
        'bar'
      end
    end
  end


Given (a method indented in a class):
  class HelloWorld
    def greet
      greeting = "Hello world"
      begin
        something
      end
      puts greeting
    end

    def foo
      'bar'
    end
  end

Do():
  :3\<Enter>
  :ExtractMethod\<Enter>

Expect():
  class HelloWorld
    def greet
      begin
        something
      end
      puts greeting
    end

    def greeting
      "Hello world"
    end

    def foo
      'bar'
    end
  end


